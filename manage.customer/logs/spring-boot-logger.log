2021-06-21 00:16:18,716 INFO [RMI TCP Connection(37)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 00:16:18,741 INFO [RMI TCP Connection(37)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:163}] to localhost:27017 because the pool has been closed.
2021-06-21 00:16:34,849 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 00:16:37,032 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 00:16:37,034 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 00:16:37,043 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 00:16:37,650 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 00:16:37,853 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 200 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 00:16:38,037 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=31b9ccb3-9063-362e-bd7c-ead393fefc5b
2021-06-21 00:16:38,604 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 00:16:39,275 INFO [cluster-ClusterId{value='60d020b698e08a309c718942', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:165}] to localhost:27017
2021-06-21 00:16:39,275 INFO [cluster-rtt-ClusterId{value='60d020b698e08a309c718942', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:164}] to localhost:27017
2021-06-21 00:16:39,276 INFO [cluster-ClusterId{value='60d020b698e08a309c718942', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=51462500}
2021-06-21 00:16:39,675 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 00:16:40,378 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 00:16:41,121 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 8.342 seconds (JVM running for 9.291)
2021-06-21 00:18:14,642 INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 00:18:26,516 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 00:18:28,704 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 00:18:28,706 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 00:18:28,715 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 00:18:29,285 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 00:18:29,456 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 168 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 00:18:29,603 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=31b9ccb3-9063-362e-bd7c-ead393fefc5b
2021-06-21 00:18:30,083 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 00:18:30,906 INFO [cluster-ClusterId{value='60d02126ac7da7653074606a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:166}] to localhost:27017
2021-06-21 00:18:30,906 INFO [cluster-rtt-ClusterId{value='60d02126ac7da7653074606a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:167}] to localhost:27017
2021-06-21 00:18:30,908 INFO [cluster-ClusterId{value='60d02126ac7da7653074606a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=133194200}
2021-06-21 00:18:31,528 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 00:18:32,169 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 00:18:32,825 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 7.997 seconds (JVM running for 8.875)
2021-06-21 00:18:45,532 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:168}] to localhost:27017
2021-06-21 00:18:45,609 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [280324dd-1]  500 Server Error for HTTP POST "/customer"
java.lang.IllegalArgumentException: 'producer' type is unknown to ReactiveAdapterRegistry
	at org.springframework.util.Assert.notNull(Assert.java:201)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/customer" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.util.Assert.notNull(Assert.java:201)
		at org.springframework.web.reactive.function.BodyInserters.fromProducer(BodyInserters.java:139)
		at org.springframework.web.reactive.function.server.DefaultServerResponseBuilder.body(DefaultServerResponseBuilder.java:243)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$4(FuntionalCustomerController.java:47)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:119)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:160)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:550)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$8(OperationExecutorImpl.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.OperationHelper$ConnectionReleasingWrappedCallback.onResult(OperationHelper.java:552)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.addBatchResult(MixedBulkWriteOperation.java:526)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.access$1700(MixedBulkWriteOperation.java:76)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:506)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:476)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:286)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:530)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:142)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:462)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:439)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:744)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:711)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:269)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:578)
		at com.mongodb.internal.connection.InternalStreamConnection.access$1100(InternalStreamConnection.java:78)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:701)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:686)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:350)
		at com.mongodb.connection.netty.NettyStream.access$1200(NettyStream.java:104)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:409)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:406)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 00:18:49,785 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [280324dd-2]  500 Server Error for HTTP POST "/customer"
java.lang.IllegalArgumentException: 'producer' type is unknown to ReactiveAdapterRegistry
	at org.springframework.util.Assert.notNull(Assert.java:201)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/customer" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.util.Assert.notNull(Assert.java:201)
		at org.springframework.web.reactive.function.BodyInserters.fromProducer(BodyInserters.java:139)
		at org.springframework.web.reactive.function.server.DefaultServerResponseBuilder.body(DefaultServerResponseBuilder.java:243)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$4(FuntionalCustomerController.java:47)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:119)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:160)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:550)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$8(OperationExecutorImpl.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.OperationHelper$ConnectionReleasingWrappedCallback.onResult(OperationHelper.java:552)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.addBatchResult(MixedBulkWriteOperation.java:526)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.access$1700(MixedBulkWriteOperation.java:76)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:506)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:476)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:286)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:530)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:142)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:462)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:439)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:744)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:711)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:269)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:578)
		at com.mongodb.internal.connection.InternalStreamConnection.access$1100(InternalStreamConnection.java:78)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:701)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:686)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:350)
		at com.mongodb.connection.netty.NettyStream.access$1200(NettyStream.java:104)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:409)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:406)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 00:19:46,475 INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 00:19:46,491 INFO [RMI TCP Connection(11)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:168}] to localhost:27017 because the pool has been closed.
2021-06-21 00:19:58,914 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 00:20:01,090 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 00:20:01,092 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 00:20:01,101 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 00:20:01,660 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 00:20:01,813 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 149 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 00:20:01,950 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=31b9ccb3-9063-362e-bd7c-ead393fefc5b
2021-06-21 00:20:02,423 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 00:20:03,060 INFO [cluster-ClusterId{value='60d021821f3c740bc8179d25', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:169}] to localhost:27017
2021-06-21 00:20:03,060 INFO [cluster-rtt-ClusterId{value='60d021821f3c740bc8179d25', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:170}] to localhost:27017
2021-06-21 00:20:03,061 INFO [cluster-ClusterId{value='60d021821f3c740bc8179d25', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54694400}
2021-06-21 00:20:03,445 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 00:20:04,047 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 00:20:04,814 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 7.685 seconds (JVM running for 8.598)
2021-06-21 00:20:19,664 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:171}] to localhost:27017
2021-06-21 00:20:19,718 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [b0022804-1]  500 Server Error for HTTP POST "/v1/customer"
java.lang.IllegalArgumentException: 'producer' type is unknown to ReactiveAdapterRegistry
	at org.springframework.util.Assert.notNull(Assert.java:201)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/v1/customer" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.util.Assert.notNull(Assert.java:201)
		at org.springframework.web.reactive.function.BodyInserters.fromProducer(BodyInserters.java:139)
		at org.springframework.web.reactive.function.server.DefaultServerResponseBuilder.body(DefaultServerResponseBuilder.java:243)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$4(FuntionalCustomerController.java:47)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:119)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:160)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:550)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$8(OperationExecutorImpl.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.OperationHelper$ConnectionReleasingWrappedCallback.onResult(OperationHelper.java:552)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.addBatchResult(MixedBulkWriteOperation.java:526)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.access$1700(MixedBulkWriteOperation.java:76)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:506)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:476)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:286)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:530)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:142)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:462)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:439)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:744)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:711)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:269)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:578)
		at com.mongodb.internal.connection.InternalStreamConnection.access$1100(InternalStreamConnection.java:78)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:701)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:686)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:350)
		at com.mongodb.connection.netty.NettyStream.access$1200(NettyStream.java:104)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:409)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:406)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 00:20:56,849 INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 00:20:56,865 INFO [RMI TCP Connection(11)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:171}] to localhost:27017 because the pool has been closed.
2021-06-21 00:21:08,620 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 00:21:10,754 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 00:21:10,755 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 00:21:10,758 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 00:21:11,325 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 00:21:11,502 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 172 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 00:21:11,668 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=31b9ccb3-9063-362e-bd7c-ead393fefc5b
2021-06-21 00:21:12,121 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 00:21:12,753 INFO [cluster-rtt-ClusterId{value='60d021c870401d33d1b2b2b0', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:173}] to localhost:27017
2021-06-21 00:21:12,753 INFO [cluster-ClusterId{value='60d021c870401d33d1b2b2b0', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:172}] to localhost:27017
2021-06-21 00:21:12,754 INFO [cluster-ClusterId{value='60d021c870401d33d1b2b2b0', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=54417900}
2021-06-21 00:21:13,096 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 00:21:13,814 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 00:21:14,514 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 7.5 seconds (JVM running for 8.356)
2021-06-21 00:21:46,994 INFO [RMI TCP Connection(11)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 00:21:58,824 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 00:22:00,991 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 00:22:00,993 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 00:22:00,999 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 00:22:01,596 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 00:22:01,764 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 164 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 00:22:01,963 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=31b9ccb3-9063-362e-bd7c-ead393fefc5b
2021-06-21 00:22:02,456 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 00:22:03,108 INFO [cluster-ClusterId{value='60d021fae8110066a159e77a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:175}] to localhost:27017
2021-06-21 00:22:03,108 INFO [cluster-rtt-ClusterId{value='60d021fae8110066a159e77a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:174}] to localhost:27017
2021-06-21 00:22:03,109 INFO [cluster-ClusterId{value='60d021fae8110066a159e77a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=59428100}
2021-06-21 00:22:03,547 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 00:22:04,253 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 00:22:04,961 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 7.816 seconds (JVM running for 8.668)
2021-06-21 00:22:46,803 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:176}] to localhost:27017
2021-06-21 00:22:46,910 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [3910573d-1]  500 Server Error for HTTP POST "/v1/functional/customer"
java.lang.IllegalArgumentException: 'producer' type is unknown to ReactiveAdapterRegistry
	at org.springframework.util.Assert.notNull(Assert.java:201)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/v1/functional/customer" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.util.Assert.notNull(Assert.java:201)
		at org.springframework.web.reactive.function.BodyInserters.fromProducer(BodyInserters.java:139)
		at org.springframework.web.reactive.function.server.DefaultServerResponseBuilder.body(DefaultServerResponseBuilder.java:243)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$4(FuntionalCustomerController.java:47)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:119)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:160)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:550)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$8(OperationExecutorImpl.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.OperationHelper$ConnectionReleasingWrappedCallback.onResult(OperationHelper.java:552)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.addBatchResult(MixedBulkWriteOperation.java:526)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.access$1700(MixedBulkWriteOperation.java:76)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:506)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:476)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:286)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:530)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:142)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:462)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:439)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:744)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:711)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:269)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:578)
		at com.mongodb.internal.connection.InternalStreamConnection.access$1100(InternalStreamConnection.java:78)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:701)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:686)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:350)
		at com.mongodb.connection.netty.NettyStream.access$1200(NettyStream.java:104)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:409)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:406)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 00:25:05,459 INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 00:25:05,475 INFO [RMI TCP Connection(14)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:176}] to localhost:27017 because the pool has been closed.
2021-06-21 00:25:17,853 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 00:25:20,015 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 00:25:20,017 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 00:25:20,028 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 00:25:21,240 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 00:25:21,616 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 368 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 00:25:21,933 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=c07cdbeb-dede-3b33-847e-13700d7485cc
2021-06-21 00:25:22,994 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 00:25:24,238 INFO [cluster-rtt-ClusterId{value='60d022c24705423b85981b77', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:177}] to localhost:27017
2021-06-21 00:25:24,238 INFO [cluster-ClusterId{value='60d022c24705423b85981b77', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:178}] to localhost:27017
2021-06-21 00:25:24,240 INFO [cluster-ClusterId{value='60d022c24705423b85981b77', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=121227000}
2021-06-21 00:25:24,995 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 00:25:26,216 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 00:25:27,482 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 11.241 seconds (JVM running for 12.166)
2021-06-21 00:27:46,877 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:182}] to localhost:27017
2021-06-21 01:05:07,589 INFO [RMI TCP Connection(51)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 01:05:07,631 INFO [RMI TCP Connection(51)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:182}] to localhost:27017 because the pool has been closed.
2021-06-21 01:05:20,744 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 01:05:22,951 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 01:05:22,953 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 01:05:22,959 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 01:05:23,518 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 01:05:23,734 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 211 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 01:05:23,917 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=c07cdbeb-dede-3b33-847e-13700d7485cc
2021-06-21 01:05:24,590 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 01:05:25,244 INFO [cluster-ClusterId{value='60d02c24f186b4677ab71818', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:183}] to localhost:27017
2021-06-21 01:05:25,244 INFO [cluster-rtt-ClusterId{value='60d02c24f186b4677ab71818', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:184}] to localhost:27017
2021-06-21 01:05:25,245 INFO [cluster-ClusterId{value='60d02c24f186b4677ab71818', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=53508100}
2021-06-21 01:05:25,742 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 01:05:27,076 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 01:05:28,325 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 9.745 seconds (JVM running for 10.766)
2021-06-21 01:06:16,227 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:185}] to localhost:27017
2021-06-21 01:06:16,308 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [b7ed266c-1]  500 Server Error for HTTP GET "/v1/customer/customer"
java.lang.Exception: No Customer found with Id: customer
	at com.bank.manage.customer.domain.service.CustomerServiceImpl.getByIdCustomer(CustomerServiceImpl.java:21)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.bank.manage.customer.controller.FuntionalCustomerController$$Lambda$814/1594500664@150ca957 [DispatcherHandler]
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP GET "/v1/customer/customer" [ExceptionHandlingWebHandler]
Stack trace:
		at com.bank.manage.customer.domain.service.CustomerServiceImpl.getByIdCustomer(CustomerServiceImpl.java:21)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$1(FuntionalCustomerController.java:37)
		at org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter.handle(HandlerFunctionAdapter.java:61)
		at org.springframework.web.reactive.DispatcherHandler.invokeHandler(DispatcherHandler.java:171)
		at org.springframework.web.reactive.DispatcherHandler.lambda$handle$1(DispatcherHandler.java:153)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:73)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:281)
		at reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:860)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:199)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:177)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:177)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:428)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:218)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)
		at reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:208)
		at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:80)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:208)
		at reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:80)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:448)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:218)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:164)
		at reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:86)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:255)
		at reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)
		at reactor.netty.http.server.HttpServer$HttpServerHandle.onStateChange(HttpServer.java:915)
		at reactor.netty.ReactorNetty$CompositeConnectionObserver.onStateChange(ReactorNetty.java:654)
		at reactor.netty.transport.ServerTransport$ChildObserver.onStateChange(ServerTransport.java:478)
		at reactor.netty.http.server.HttpServerOperations.onInboundNext(HttpServerOperations.java:526)
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:94)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at reactor.netty.http.server.HttpTrafficHandler.channelRead(HttpTrafficHandler.java:209)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311)
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 01:07:43,547 INFO [RMI TCP Connection(14)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 01:07:43,562 INFO [RMI TCP Connection(14)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:185}] to localhost:27017 because the pool has been closed.
2021-06-21 01:07:55,487 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 01:07:57,652 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 01:07:57,653 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 01:07:57,661 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 01:07:58,225 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 01:07:58,387 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 159 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 01:07:58,526 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=c07cdbeb-dede-3b33-847e-13700d7485cc
2021-06-21 01:07:58,972 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 01:07:59,616 INFO [cluster-ClusterId{value='60d02cbe6e8b9c722b55944a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:187}] to localhost:27017
2021-06-21 01:07:59,616 INFO [cluster-rtt-ClusterId{value='60d02cbe6e8b9c722b55944a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:186}] to localhost:27017
2021-06-21 01:07:59,617 INFO [cluster-ClusterId{value='60d02cbe6e8b9c722b55944a', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=53609400}
2021-06-21 01:07:59,946 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 01:08:00,571 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 01:08:01,567 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 7.76 seconds (JVM running for 8.67)
2021-06-21 01:08:27,983 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:188}] to localhost:27017
2021-06-21 01:08:28,017 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [42bd63e1-2]  500 Server Error for HTTP POST "/customer/save"
java.lang.IllegalArgumentException: 'producer' type is unknown to ReactiveAdapterRegistry
	at org.springframework.util.Assert.notNull(Assert.java:201)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/customer/save" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.util.Assert.notNull(Assert.java:201)
		at org.springframework.web.reactive.function.BodyInserters.fromProducer(BodyInserters.java:139)
		at org.springframework.web.reactive.function.server.DefaultServerResponseBuilder.body(DefaultServerResponseBuilder.java:243)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$4(FuntionalCustomerController.java:47)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:119)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:160)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:550)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$8(OperationExecutorImpl.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.OperationHelper$ConnectionReleasingWrappedCallback.onResult(OperationHelper.java:552)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.addBatchResult(MixedBulkWriteOperation.java:526)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.access$1700(MixedBulkWriteOperation.java:76)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:506)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:476)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:286)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:530)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:142)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:462)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:439)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:744)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:711)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:269)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:578)
		at com.mongodb.internal.connection.InternalStreamConnection.access$1100(InternalStreamConnection.java:78)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:701)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:686)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:350)
		at com.mongodb.connection.netty.NettyStream.access$1200(NettyStream.java:104)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:409)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:406)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 01:10:31,431 INFO [RMI TCP Connection(12)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 01:10:31,448 INFO [RMI TCP Connection(12)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:188}] to localhost:27017 because the pool has been closed.
2021-06-21 01:10:43,279 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 01:10:45,456 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 01:10:45,458 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 01:10:45,460 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 01:10:46,011 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 01:10:46,163 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 148 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 01:10:46,305 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=c07cdbeb-dede-3b33-847e-13700d7485cc
2021-06-21 01:10:46,778 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 01:10:47,409 INFO [cluster-ClusterId{value='60d02d664bac7c573d91d192', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:189}] to localhost:27017
2021-06-21 01:10:47,409 INFO [cluster-rtt-ClusterId{value='60d02d664bac7c573d91d192', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:190}] to localhost:27017
2021-06-21 01:10:47,409 INFO [cluster-ClusterId{value='60d02d664bac7c573d91d192', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=52811500}
2021-06-21 01:10:47,813 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 01:10:48,572 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 01:10:49,282 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 7.679 seconds (JVM running for 8.553)
2021-06-21 01:11:11,235 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:191}] to localhost:27017
2021-06-21 01:11:11,329 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [29a97902-1]  500 Server Error for HTTP POST "/api/customer/save"
java.lang.IllegalArgumentException: 'producer' type is unknown to ReactiveAdapterRegistry
	at org.springframework.util.Assert.notNull(Assert.java:201)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/api/customer/save" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.util.Assert.notNull(Assert.java:201)
		at org.springframework.web.reactive.function.BodyInserters.fromProducer(BodyInserters.java:139)
		at org.springframework.web.reactive.function.server.DefaultServerResponseBuilder.body(DefaultServerResponseBuilder.java:243)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$4(FuntionalCustomerController.java:47)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:119)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:160)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:550)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$8(OperationExecutorImpl.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.OperationHelper$ConnectionReleasingWrappedCallback.onResult(OperationHelper.java:552)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.addBatchResult(MixedBulkWriteOperation.java:526)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.access$1700(MixedBulkWriteOperation.java:76)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:506)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:476)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:286)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:530)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:142)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:462)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:439)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:744)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:711)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:269)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:578)
		at com.mongodb.internal.connection.InternalStreamConnection.access$1100(InternalStreamConnection.java:78)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:701)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:686)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:350)
		at com.mongodb.connection.netty.NettyStream.access$1200(NettyStream.java:104)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:409)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:406)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 01:12:34,822 ERROR [nioEventLoopGroup-3-3] org.springframework.core.log.CompositeLog : [29a97902-3]  500 Server Error for HTTP POST "/api/customer/save"
java.lang.IllegalArgumentException: 'producer' type is unknown to ReactiveAdapterRegistry
	at org.springframework.util.Assert.notNull(Assert.java:201)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]
	|_ checkpoint ⇢ HTTP POST "/api/customer/save" [ExceptionHandlingWebHandler]
Stack trace:
		at org.springframework.util.Assert.notNull(Assert.java:201)
		at org.springframework.web.reactive.function.BodyInserters.fromProducer(BodyInserters.java:139)
		at org.springframework.web.reactive.function.server.DefaultServerResponseBuilder.body(DefaultServerResponseBuilder.java:243)
		at com.bank.manage.customer.controller.FuntionalCustomerController.lambda$4(FuntionalCustomerController.java:47)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:125)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoUsingWhen$MonoUsingWhenSubscriber.deferredComplete(MonoUsingWhen.java:278)
		at reactor.core.publisher.FluxUsingWhen$CommitInner.onComplete(FluxUsingWhen.java:540)
		at reactor.core.publisher.Operators.complete(Operators.java:136)
		at reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:45)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4150)
		at reactor.core.publisher.FluxUsingWhen$UsingWhenSubscriber.onComplete(FluxUsingWhen.java:397)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:127)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1815)
		at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:119)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onComplete(MonoFlatMapMany.java:260)
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:142)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onComplete(Operators.java:2057)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:160)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$30(MongoOperationPublisher.java:550)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$8(OperationExecutorImpl.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.operation.OperationHelper$ConnectionReleasingWrappedCallback.onResult(OperationHelper.java:552)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.addBatchResult(MixedBulkWriteOperation.java:526)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.access$1700(MixedBulkWriteOperation.java:76)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:506)
		at com.mongodb.internal.operation.MixedBulkWriteOperation$6.onResult(MixedBulkWriteOperation.java:476)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor$2.onResult(DefaultServer.java:286)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.CommandProtocolImpl$1.onResult(CommandProtocolImpl.java:84)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection$2.onResult(DefaultConnectionPool.java:530)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection$2.onResult(UsageTrackingInternalConnection.java:142)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:48)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:462)
		at com.mongodb.internal.connection.InternalStreamConnection$2$1.onResult(InternalStreamConnection.java:439)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:744)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:711)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:269)
		at com.mongodb.internal.connection.InternalStreamConnection.readAsync(InternalStreamConnection.java:578)
		at com.mongodb.internal.connection.InternalStreamConnection.access$1100(InternalStreamConnection.java:78)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:701)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback.onResult(InternalStreamConnection.java:686)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:581)
		at com.mongodb.internal.connection.InternalStreamConnection$5.completed(InternalStreamConnection.java:578)
		at com.mongodb.connection.netty.NettyStream.readAsync(NettyStream.java:322)
		at com.mongodb.connection.netty.NettyStream.handleReadResponse(NettyStream.java:350)
		at com.mongodb.connection.netty.NettyStream.access$1200(NettyStream.java:104)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:409)
		at com.mongodb.connection.netty.NettyStream$InboundBufferHandler.channelRead0(NettyStream.java:406)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.lang.Thread.run(Thread.java:748)
2021-06-21 02:05:31,996 INFO [RMI TCP Connection(65)-127.0.0.1] org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin : Application shutdown requested.
2021-06-21 02:05:32,008 INFO [RMI TCP Connection(65)-127.0.0.1] com.mongodb.diagnostics.logging.SLF4JLogger : Closed connection [connectionId{localValue:3, serverValue:191}] to localhost:27017 because the pool has been closed.
2021-06-21 07:54:31,392 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Fetching config from server at : http://localhost:8888
2021-06-21 07:54:33,534 INFO [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2021-06-21 07:54:33,537 WARN [main] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator : Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/CUSTOMER/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2021-06-21 07:54:33,547 INFO [main] org.springframework.boot.SpringApplication : No active profile set, falling back to default profiles: default
2021-06-21 07:54:34,114 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2021-06-21 07:54:34,290 INFO [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 171 ms. Found 1 Reactive MongoDB repository interfaces.
2021-06-21 07:54:34,423 INFO [main] org.springframework.cloud.context.scope.GenericScope : BeanFactory id=c07cdbeb-dede-3b33-847e-13700d7485cc
2021-06-21 07:54:34,988 INFO [main] com.mongodb.diagnostics.logging.SLF4JLogger : Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2021-06-21 07:54:35,523 INFO [cluster-ClusterId{value='60d08c0a48b80d3618d36407', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:1, serverValue:2}] to localhost:27017
2021-06-21 07:54:35,523 INFO [cluster-rtt-ClusterId{value='60d08c0a48b80d3618d36407', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:2, serverValue:1}] to localhost:27017
2021-06-21 07:54:35,523 INFO [cluster-ClusterId{value='60d08c0a48b80d3618d36407', description='null'}-localhost:27017] com.mongodb.diagnostics.logging.SLF4JLogger : Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=46069900}
2021-06-21 07:54:35,862 INFO [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver : Exposing 0 endpoint(s) beneath base path '/actuator'
2021-06-21 07:54:36,388 INFO [main] org.springframework.boot.web.embedded.netty.NettyWebServer : Netty started on port 8096
2021-06-21 07:54:36,883 INFO [main] org.springframework.boot.StartupInfoLogger : Started Application in 7.005 seconds (JVM running for 7.774)
2021-06-21 07:55:14,182 INFO [nioEventLoopGroup-3-3] com.mongodb.diagnostics.logging.SLF4JLogger : Opened connection [connectionId{localValue:3, serverValue:3}] to localhost:27017
